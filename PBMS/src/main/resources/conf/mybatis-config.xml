<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration 
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 通过properties标签，读取java配置文件的内容 -->
	<!-- properties加载顺序比property标签声明更晚故和下面不冲突 -->
	<!-- <properties resource="conf/database.properties"> <property name="username" value="111" /> </properties> -->

	<!-- 配置mybatis的环境信息 -->
	<!-- <environments default="development"> <environment id="development"> 配置JDBC事务控制，由mybatis进行管理 <transactionManager type="JDBC"></transactionManager> 
		配置数据源，采用dbcp连接池 <dataSource type="POOLED"> <property name="driver" value="${db.driver}" /> <property name="url" value="${db.url}" 
		/> <property name="username" value="${db.username}" /> <property name="password" value="${db.password}" /> </dataSource> 
		</environment> </environments> -->


	<!-- 设置全局参数 -->
	<settings>
		<!-- 开启mybatis的全局映射器二级缓存 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 打开延迟加载的开关 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
		<setting name="aggressiveLazyLoading" value="false" />
		<!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 允许使用列标签代替列名 -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
		<setting name="useGeneratedKeys" value="true" />
		<!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->
		<setting name="autoMappingBehavior" value="FULL" />
		<!-- 对于批量更新操作缓存SQL以提高性能 (影响insert、delete、update的返回值，为-2147482646，而不是1或0)-->
		<!-- <setting name="defaultExecutorType" value="BATCH" /> -->
		<!-- 数据库超过25000秒仍未响应则超时 -->
		<setting name="defaultStatementTimeout" value="2500" />
		
		<setting name="callSettersOnNulls" value="true"/>  
	</settings>


	<!-- 设置mybatis与数据库连接的相关属性 -->
	<!-- dialect数据库方言属性设置（ 目前只有mysql和oracle两种） -->
	<!-- <properties> <property name="dialect" value="MySQL" /> </properties> -->


	<!-- 配置mysql分页拦截器 -->
	<!-- com.xxyd.mybatis.interceptor.PaginationInterceptor 来自于jar包mybatis-pager-1.0.0.jar -->
	<!-- <plugins> <plugin interceptor="com.xxyd.mybatis.interceptor.PaginationInterceptor"></plugin> </plugins> -->


	<!-- 忽略xml配置文件中的jdbcType 配置（避免出错） -->
	<!-- <typeHandlers>
		<typeHandler handler="org.mybatis.example.ExampleTypeHandler" />
	</typeHandlers> -->


	<!-- 命名空间:别名设置 -->
	<typeAliases>
		<!-- 单个定义别名 -->
		<!-- <typeAlias alias="boUser" type="com.pbms.pojo.BoUser" /> -->

		<!-- 批量定义别名：别名为类名(首字母不区分大小写) -->
		<package name="com.pbms.pojo" />
		<!-- 1.mybatis支持的别名 别名 映射的类型 _byte byte _long long _short short _int int _integer int _double double _float float _boolean 
			boolean string String byte Byte long Long short Short int Integer integer Integer double Double float Float boolean Boolean 
			date Date decimal BigDecimal bigdecimal BigDecimal -->
	</typeAliases>


	<!-- 非注解的sql映射文件配置，如果使用mybatis注解，该mapper无需配置， 但是如果mybatis注解中包含@resultMap注解，则mapper必须配置，给resultMap注解使用 -->
	<!-- 已在spring-mybatis.xml中配置扫描，此处不再配置 -->
	<mappers>

		<!-- 注册指定包下的所有映射文件.注意：此种方法要求mapper接口和mapper映射文件要名称相同，且放到同一个目录下 -->
		<!-- <package name="mapper/*.xml"/> -->

		<!-- 使用完全限定路径 -->
		<!-- <mapper url=""/> -->

		<!-- 使用mapper接口的全限定名 .注意：此种方法要求mapper接口和mapper映射文件要名称相同，且放到同一个目录下； -->
		<!-- <mapper class=""/> -->

		<!-- 使用相对于类路径的资源 -->
		<!-- <mapper resource="com/pbms/mapper/BoUserMapper.xml" /> -->


	</mappers>


</configuration>





