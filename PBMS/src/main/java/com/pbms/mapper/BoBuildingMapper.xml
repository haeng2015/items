<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boBuildingMapper">

	<resultMap id="BaseResultMap" type="com.pbms.pojo.BoBuilding">
		<id column="BUILD_ID" property="buildId" jdbcType="INTEGER" />
		<result column="BUILD_NAME" property="buildName" jdbcType="VARCHAR" />
		<result column="BUILD_START_TIME" property="buildStartTime" jdbcType="TIMESTAMP" />
		<result column="BUILD_END_TIME" property="buildEndTime" jdbcType="TIMESTAMP" />
		<result column="BUILD_INFO" property="buildInfo" jdbcType="VARCHAR" />
		<result column="BUILD_AREA" property="buildArea" jdbcType="VARCHAR" />
		<result column="IS_DELETED" property="isDeleted" jdbcType="CHAR" />
		<result column="EXTEND1" property="extend1" jdbcType="VARCHAR" />
		<result column="EXTEND2" property="extend2" jdbcType="VARCHAR" />

		<!-- 一对多配置（通过select引用别的resultMap值，添加namespace表示引用外部的） -->
		<!-- <collection property="boAccessoryList" column="boAccessorys" ofType="com.pbms.pojo.BoAccessory" select="boAccessoryMapper.BaseResultMap"></collection> -->
	</resultMap>

	<sql id="Base_Column_List">
		BUILD_ID, BUILD_NAME, BUILD_START_TIME, BUILD_END_TIME, BUILD_INFO, BUILD_AREA,
		IS_DELETED, EXTEND1,EXTEND2
	</sql>

	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from bo_building
		where IS_DELETED = '0' AND BUILD_ID = #{buildId,jdbcType=INTEGER}
	</select>

	<!-- 查询所有 -->
	<select id="selects" resultMap="BaseResultMap">
		select
		bb.BUILD_ID,bb.BUILD_NAME
		from bo_building bb
		where bb.IS_DELETED = '0'
	</select>


	<!-- 带分页的全部查询 -->
	<!-- 通过_parameter.containsKey('roleName')检查是否存在该值，直接填写key值即可取到map的value值 -->
	<!-- #{value}方式会自动添加单引号将值当字符串处理，${value}会将值当原始的处理 -->
	<select id="pageDataGrid" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		FROM bo_building build
		<where>
			<!-- 此两种判断map参数值是否为空的方法无效（取map参数的值不能通过params.key取的，而是直接写key值） -->
			<!-- <if test="_parameter.containsKey('buildName') != null"> -->
			<!-- <if test="params != null"> -->

			<if test="buildName != null and buildName !=''">
				<!-- AND build.BUILD_NAME LIKE CONCAT('%', CONCAT(${buildName}, '%')) -->
				AND build.BUILD_NAME LIKE '%${buildName}%'
			</if>
			<!-- '《》号必须要转义，否则报错' -->
			<if test="buildStartDate !=null and buildStartDate != ''">
				AND build.BUILD_START_TIME &gt;= #{buildStartDate}
			</if>
			<if test="buildEndDate !=null and buildEndDate != ''">
				AND build.BUILD_END_TIME &lt;= #{buildEndDate}
			</if>
			<if test="buildInfo !=null and buildInfo != ''">
				AND build.BUILD_INFO LIKE '%${buildInfo}%'
			</if>
			<if test="buildArea !=null and buildArea != ''">
				AND build.BUILD_AREA = #{buildArea}
			</if>

			AND build.IS_DELETED = '0'
		</where>
		<if test="params != null">
			ORDER BY build.${orderColumn} ${orderTurn}
		</if>
		<!-- 已在后台RowBounds分页，故无需在此limit -->
		<!-- LIMIT #{pageNo, jdbcType=INTEGER} , #{pageSize,jdbcType=INTEGER} -->

		<!-- SELECT r.* FROM (SELECT * FROM bo_role role WHERE role.ROLE_NAME LIKE '%员%' LIMIT 1 ,5) r ORDER BY r.ROLE_NAME ASC -->
	</select>

	<!-- 根据条件查找实体记录数 -->
	<select id="countParam" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT COUNT(r.BUILD_ID) FROM
		(SELECT build.BUILD_ID FROM bo_building build
		<where>
			<if test="buildName != null and buildName !=''">
				<!-- AND build.BUILD_NAME LIKE CONCAT('%', CONCAT(${buildName}, '%')) -->
				AND build.BUILD_NAME LIKE '%${buildName}%'
			</if>
			<!-- '《》号必须要转义，否则报错' -->
			<if test="buildStartDate !=null and buildStartDate != ''">
				AND build.BUILD_START_TIME &gt;= #{buildStartDate}
			</if>
			<if test="buildEndDate !=null and buildEndDate != ''">
				AND build.BUILD_END_TIME &lt;= #{buildEndDate}
			</if>
			<if test="buildInfo !=null and buildInfo != ''">
				AND build.BUILD_INFO LIKE '%${buildInfo}%'
			</if>
			<if test="buildArea !=null and buildArea != ''">
				AND build.BUILD_AREA = #{buildArea}
			</if>
			AND IS_DELETED = '0'
		</where>
		) r
	</select>

	<!-- 配置插入对象后返回该对象的id：（mysql） “keyProperty”表示返回的id要保存到对象的那个属性中 “useGeneratedKeys”表示主键id为自增长模式 -->

	<!-- oracle保存对象后获得主键方式： <insert id="insert" parameterType="com.test.User"> <selectKey resultType="INTEGER" order="BEFORE" 
		keyProperty="userId"> SELECT SEQ_USER.NEXTVAL as userId from DUAL </selectKey> insert into user (user_id, user_name, modified, 
		state) values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{modified,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}) 
		</insert> -->
	<insert id="insertSelective" parameterType="com.pbms.pojo.BoBuilding" keyProperty="buildId" useGeneratedKeys="true">
		insert into bo_building
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="buildName != null">
				BUILD_NAME,
			</if>
			<if test="buildStartTime != null">
				BUILD_START_TIME,
			</if>
			<if test="buildEndTime != null">
				BUILD_END_TIME,
			</if>
			<if test="buildInfo != null">
				BUILD_INFO,
			</if>
			<if test="buildArea != null">
				BUILD_AREA,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="extend1 != null">
				EXTEND1,
			</if>
			<if test="extend2 != null">
				EXTEND2,
			</if>
			<!-- <if test="boAccessoryList != null"> boAccessorys, </if> -->
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="buildName != null">
				#{buildName,jdbcType=VARCHAR},
			</if>
			<if test="buildStartTime != null">
				#{buildStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="buildEndTime != null">
				#{buildEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="buildInfo != null">
				#{buildInfo,jdbcType=VARCHAR},
			</if>
			<if test="buildArea != null">
				#{buildArea,jdbcType=VARCHAR},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=CHAR},
			</if>
			<if test="extend1 != null">
				#{extend1,jdbcType=VARCHAR},
			</if>
			<if test="extend2 != null">
				#{extend2,jdbcType=VARCHAR},
			</if>
			<!-- <if test="boAccessoryList != null"> #{boAccessoryList,jdbcType=INTEGER}, </if> -->
		</trim>
	</insert>

	<!-- 更新对象 -->
	<update id="updateSelective" parameterType="com.pbms.pojo.BoBuilding">
		update bo_building
		<set>
			<if test="buildName != null">
				BUILD_NAME = #{buildName,jdbcType=VARCHAR},
			</if>
			<if test="buildStartTime != null">
				BUILD_START_TIME = #{buildStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="buildEndTime != null">
				BUILD_END_TIME = #{buildEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="buildInfo != null">
				BUILD_INFO = #{buildInfo,jdbcType=VARCHAR},
			</if>
			<if test="buildArea != null">
				BUILD_AREA = #{buildArea,jdbcType=VARCHAR},
			</if>
			<if test="extend1 != null">
				EXTEND1 = #{extend1,jdbcType=VARCHAR},
			</if>
			<if test="extend2 != null">
				EXTEND2 = #{extend2,jdbcType=VARCHAR},
			</if>
			<!-- <if test="boAccessoryList != null"> boAccessorys = #{boAccessoryList,jdbcType=VARCHAR}, </if> -->
		</set>
		where BUILD_ID = #{buildId,jdbcType=INTEGER}
	</update>

	<!-- 删除致IS_DELETED为1 -->
	<update id="isDeleted" parameterType="java.lang.Integer">
		update bo_building bb
		set bb.IS_DELETED = '1'
		where bb.BUILD_ID =
		#{buildId,jdbcType=INTEGER}
	</update>

	<!-- 批量删除致IS_DELETED为1 -->
	<update id="isDeletedBatch" parameterType="java.util.List">
		update bo_building bb
		set bb.IS_DELETED = '1'
		where bb.BUILD_ID in
		#{buildId,jdbcType=INTEGER}
	</update>

</mapper>