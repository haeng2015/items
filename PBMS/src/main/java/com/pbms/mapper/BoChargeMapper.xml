<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boChargeMapper">
	<resultMap id="BaseResultMap" type="com.pbms.pojo.BoCharge">
		<id column="CHARGE_ID" property="chargeId" jdbcType="INTEGER" />
		<result column="CHARGE_NAME" property="chargeName" jdbcType="VARCHAR" />
		<result column="CHARGE_PRICE" property="chargePrice" jdbcType="VARCHAR" />
		<result column="EXTEND1" property="extend1" jdbcType="VARCHAR" />
		<result column="EXTEND2" property="extend2" jdbcType="VARCHAR" />
	</resultMap>
	
	<sql id="Base_Column_List">
		CHARGE_ID, CHARGE_NAME, CHARGE_PRICE, EXTEND1, EXTEND2
	</sql>
	
	<select id="get" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from bo_charge
		where CHARGE_ID = #{chargeId,jdbcType=INTEGER}
	</select>
	
	<!-- 带分页的全部查询 -->
	<!-- 通过_parameter.containsKey('roleName')检查是否存在该值，直接填写key值即可取到map的value值 -->
	<!-- #{value}方式会自动添加单引号将值当字符串处理，${value}会将值当原始的处理 -->
	<select id="pageDataGrid" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT
		<include refid="Base_Column_List" />
		FROM bo_charge charge
		<where>
			<!-- 此两种判断map参数值是否为空的方法无效（取map参数的值不能通过params.key取的，而是直接写key值） -->
			<!-- <if test="_parameter.containsKey('buildName') != null"> -->
			<!-- <if test="params != null"> -->

			<if test="chargeName != null and chargeName !=''">
				<!-- AND build.BUILD_NAME LIKE CONCAT('%', CONCAT(${buildName}, '%')) -->
				AND charge.CHARGE_NAME LIKE '%${chargeName}%'
			</if>
		</where>
		<if test="params != null">
			ORDER BY charge.${orderColumn} ${orderTurn}
		</if>
		<!-- 已在后台RowBounds分页，故无需在此limit -->
		<!-- LIMIT #{pageNo, jdbcType=INTEGER} , #{pageSize,jdbcType=INTEGER} -->

		<!-- SELECT r.* FROM (SELECT * FROM bo_role role WHERE role.ROLE_NAME LIKE '%员%' LIMIT 1 ,5) r ORDER BY r.ROLE_NAME ASC -->
	</select>

	<!-- 根据条件查找实体记录数 -->
	<select id="countParam" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT COUNT(r.CHARGE_ID) FROM
		(SELECT charge.CHARGE_ID FROM bo_charge charge
		<where>
			<if test="chargeName != null and chargeName !=''">
				AND charge.CHARGE_NAME LIKE '%${chargeName}%'
			</if>
		</where>
		) r
	</select>
	
	<delete id="delete" parameterType="java.lang.Integer">
		delete from bo_charge
		where CHARGE_ID = #{chargeId,jdbcType=INTEGER}
	</delete>
	
	<insert id="insertSelective" parameterType="com.pbms.pojo.BoCharge" keyProperty="chargeId" useGeneratedKeys="true">
		insert into bo_charge
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="chargeName != null">
				CHARGE_NAME,
			</if>
			<if test="chargePrice != null">
				CHARGE_PRICE,
			</if>
			<if test="extend1 != null">
				EXTEND1,
			</if>
			<if test="extend2 != null">
				EXTEND2,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="chargeId != null">
				#{chargeId,jdbcType=INTEGER},
			</if>
			<if test="chargeName != null">
				#{chargeName,jdbcType=VARCHAR},
			</if>
			<if test="chargePrice != null">
				#{chargePrice,jdbcType=VARCHAR},
			</if>
			<if test="extend1 != null">
				#{extend1,jdbcType=VARCHAR},
			</if>
			<if test="extend2 != null">
				#{extend2,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<update id="updateSelective" parameterType="com.pbms.pojo.BoCharge">
		update bo_charge
		<set>
			<if test="chargeName != null">
				CHARGE_NAME = #{chargeName,jdbcType=VARCHAR},
			</if>
			<if test="chargePrice != null">
				CHARGE_PRICE = #{chargePrice,jdbcType=VARCHAR},
			</if>
			<if test="extend1 != null">
				EXTEND1 = #{extend1,jdbcType=VARCHAR},
			</if>
			<if test="extend2 != null">
				EXTEND2 = #{extend2,jdbcType=VARCHAR},
			</if>
		</set>
		where CHARGE_ID = #{chargeId,jdbcType=INTEGER}
	</update>
	
</mapper>