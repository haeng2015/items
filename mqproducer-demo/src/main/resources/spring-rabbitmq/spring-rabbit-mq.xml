<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
            http://www.springframework.org/schema/rabbit
    		http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- 连接服务配置 -->
	<rabbit:connection-factory id="connectionFactory"
		host="${rabbitmq.host}" username="${rabbitmq.userName}" password="${rabbitmq.password}"
		port="${rabbitmq.port}" virtual-host="${rabbitmq.vhost}"
		channel-cache-size="${rabbitmq.channelCacheSize}" />

	<rabbit:admin connection-factory="connectionFactory" />


	<!-- 消息队列queue 声明 -->
	<!-- 参数说明：durable:是否持久化； exclusive: 仅创建者可以使用的私有队列，断开后自动删除； auto_delete: 
		当所有消费客户端连接断开后，是否自动删除队列 -->
	<rabbit:queue name="${rabbitmq.queueName}" durable="true"
		auto-delete="false" exclusive="false" />


	<!-- 交换机定义 ，exchange queue binging key 绑定 -->
	<!-- 参数说明： direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。 
		rabbit:binding：设置消息queue匹配的key -->
	<rabbit:direct-exchange name="${rabbitmq.exchange}"
		durable="true" auto-delete="false">
		<rabbit:bindings>
			<rabbit:binding queue="${rabbitmq.queueName}" key="${rabbitmq.exchangeKey}" />
		</rabbit:bindings>
	</rabbit:direct-exchange>


	<!-- 消息对象json转换类 -->
	<!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列 -->
	<!-- fastjson的速度快于jackson,可以替换为fastjson的一个实现，class="mq.convert.FastJsonMessageConverter" -->
	<!-- Gson的速度快于jackson,这里替换为Gson的实现，class="cn.slimsmart.rabbitmq.demo.spring.tag.Gson2JsonMessageConverter" -->
	<bean id="jsonMessageConverter"
		class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />


	<!-- spring template声明，用于数据的接收和发送 ,为service调用提供，通过该id调用注入 -->
	<rabbit:template exchange="${rabbitmq.exchange}" id="amqpTemplate"
		routing-key="${rabbitmq.exchangeKey}" connection-factory="connectionFactory"
		message-converter="jsonMessageConverter" retry-template="retryTemplate" />

	<bean id="retryTemplate" class="org.springframework.retry.support.RetryTemplate">
		<property name="backOffPolicy">
			<bean class="org.springframework.retry.backoff.ExponentialBackOffPolicy">
				<property name="initialInterval" value="500" />
				<property name="multiplier" value="10.0" />
				<property name="maxInterval" value="10000" />
			</bean>
		</property>
	</bean>
</beans>

